{"version":3,"sources":["../src/app.js"],"names":["mongoose","Promise","global","connect","useNewUrlParser","app","PORT","use","express","json","urlencoded","router","req","res","next","error","Error","message","status","get","msg","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,mBAASG,OAAT,CAAiB,qCAAjB,EAAwD,EAAEC,iBAAiB,IAAnB,EAAxD;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;;AAEAD,IAAIE,GAAJ,CAAQC,kBAAQC,IAAR,EAAR,E,CAA6B;AAC7BJ,IAAIE,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;AACAL,IAAIE,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAF,IAAIE,GAAJ,CAAQ,MAAR,EAAgBI,cAAhB;AACAN,IAAIE,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,UAAME,OAAN,GAAgB,eAAhB;AACAF,UAAMG,MAAN,GAAe,GAAf;AACAJ,SAAKC,KAAL;AACH,CALD;AAMAV,IAAIE,GAAJ,CAAQ,UAACQ,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAAM;AACrCD,QAAIK,MAAJ,CAAWH,MAAMG,MAAN,IAAgB,GAA3B;AACA,WAAOL,IAAIJ,IAAJ,CAAS;AACZM,eAAO;AACHE,qBAASF,MAAME;AADZ;AADK,KAAT,CAAP;AAKH,CAPD;;AASAZ,IAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAKC,GAAL,EAAY;AACrBA,QAAIJ,IAAJ,CAAS;AACLW,aAAK;AADA,KAAT;AAGH,CAJD;;AAMAf,IAAIgB,MAAJ,CAAWf,IAAX,EAAiB,YAAK;AAClBgB,YAAQC,GAAR,oCAA6CjB,IAA7C;AACH,CAFD","file":"app.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport logger from 'morgan';\n\nimport {router} from './config/routes';\n\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost/invoice-builder', { useNewUrlParser: true });\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());     //body parser\napp.use(express.urlencoded());\napp.use(logger('dev'));\napp.use('/api', router); \napp.use((req, res, next) => {\n    const error = new Error('Not found');\n    error.message = 'Invalid route';\n    error.status = 404;\n    next(error);\n});\napp.use((error, req, res, next) => {     //error handler\n    res.status(error.status || 500);\n    return res.json({\n        error: {\n            message: error.message,\n        },\n    });\n});\n\napp.get('/', (req,res) =>{\n    res.json({\n        msg: 'Welcome to Invoice builder backend'\n    })\n});\n\napp.listen(PORT, () =>{\n    console.log(`Server is running at the port ${PORT}`);\n})"]}